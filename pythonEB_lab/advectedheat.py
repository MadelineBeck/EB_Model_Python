# -*- coding: utf-8 -*-
"""advectedheat.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jBEB044zUZczCalgEAyoNDO2rnItK036
"""

#Import packages 
import pandas as pd
from numpy.ma.core import log
import numpy as np
import math

#Import the -csv file for the data, located at the github repository 

url = "https://github.com/Kristinlyche/EM_Models/blob/758d9443d7aff14df6aa5a1db57387078188b135/matlabEB_lab/CENMET_INPUT_data.csv?raw=true"
inMet = pd.read_csv(url, index_col=0)

#print the head of the imported data to control the quality
inMet.head()

"""
First, defy the parameters 
Qr = advected heat exchange due to rain on snow (Wm-2)
Pr = rainfall intensity (m s-1)
RHOw = density of water (kg m-3)
Cw = specific heat of water  at Tr (J kg-1 K-1)
Tr = temperature of the rain (K), assume Tr = air temp.
Ts = temperature of the snow (K) - is assumed to be 0 degrees
df = dataframe

The equation to calculate advected heat: 
Qr = Pr * RHOw * Cw * (Tr - Ts) 
"""
#Create variables that are the constants for the rest of this workbook
RHOw  = 1000 # kg/m^3, Standard density of water
Cw = 4.1876e3 #J/ kg*K, Specific heat of water at Tr

#Setting up the function calculating the advected heat 

def advectedheat(df, RHOw, Cw):
  inMet = df #renaming the dataframe
  Qr = np.empty(len(inMet.index)) # Create an empty array for our outputs of latent heat
  
  for i in range(len(inMet.index)):
    Pr_hourly = inMet.iloc[i][' P_mm'] 
    Pr = (Pr_hourly/(3600))/1000 #calculates the rain intensity
    Tr = inMet.iloc[i]['T_C']
    if Tr > 0:
      Qr[i] = RHOw * Cw * Tr * Pr
      inMet['Qr'] = Qr.tolist()
    else:
      Qr[i] = 0 
      inMet['Qr'] = Qr.tolist()
  return inMet

advectedheat(inMet, RHOw, Cw)